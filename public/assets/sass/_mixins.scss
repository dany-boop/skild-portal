@mixin font-size($sizeValue: 1.6, $line: 1.2em) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
  line-height: $line;
}

@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@mixin opacity($opac) {
  opacity: $opac/100;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=$opac)";
  filter: alpha(opacity=$opac);
}

@mixin round($rad) {
  -moz-border-radius: $rad;
  -webkit-border-radius: $rad;
  border-radius: $rad;
}

@mixin box-shadow($dist, $color) {
  -moz-box-shadow: $dist $dist $dist $color;
  -webkit-box-shadow: $dist $dist $dist $color;
  box-shadow: $dist $dist $dist $color;
}

@mixin transition($details) {
  -webkit-transition: $details;
  -moz-transition: $details;
  transition: $details;
  -o-transition: $details;
}

@mixin transform($details) {
  -webkit-transform: $details;
  -moz-transform: $details;
  transform: $details;
  -o-transform: $details;
}

@mixin all-trans {
  transition: all .1s linear;
  -o-transition: all .1s linear;
  -moz-transition: all .1s linear;
  -webkit-transition: all .1s linear;
}

@mixin no-trans {
  -moz-transition: none;
  -webkit-transition: none;
  -o-transition: color 0 ease-in;
  transition: none;
}

@mixin vertical-middle {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
}

@mixin respond-to($media) {
  $vsm: 340px;
  $sm: 480px;
  $med: 768px;
  $nb: 960px;
  $lg: 1280px;
  $mlg: 1366px;
  $xl: 1600px;
  $xxl: 1920px;
  $xxxl: 2400px;

  @if $media ==very-small {
    @media only screen and (max-width: $vsm) {
      @content;
    }
  }

  @else if $media ==small {
    @media only screen and (max-width: $sm) {
      @content;
    }
  }

  @else if $media ==small-middle {
    @media only screen and (max-width: ($med - 1)) {
      @content;
    }
  }

  @else if $media ==medium {
    @media only screen and (min-width: $med) {
      @content;
    }
  }

  @else if $media ==notebook {
    @media only screen and (min-width: $nb) {
      @content;
    }
  }

  @else if $media ==phablet {
    @media only screen and (min-width: $med) and (max-width: ($lg - 1)) {
      @content;
    }
  }

  @else if $media ==large {
    @media only screen and (min-width: $lg) {
      @content;
    }
  }

  @else if $media ==more-large {
    @media only screen and (min-width: $mlg) {
      @content;
    }
  }

  @else if $media ==extra-large {
    @media only screen and (min-width: $xl) {
      @content;
    }
  }

  @else if $media ==xx-large {
    @media only screen and (min-width: $xxl) {
      @content;
    }
  }

  @else if $media ==xxx-large {
    @media only screen and (min-width: $xxxl) {
      @content;
    }
  }

  @else if $media ==retina {
    @media only screen and (-webkit-device-pixel-ratio: 2) {
      @content;
    }
  }

  @else {
    @media only screen and (min-width: $media) {
      @content;
    }
  }
}

%clearfix {

  &:before,
  &:after {
    content: " ";
    display: table;
  }

  &:after {
    clear: both;
  }
}


@keyframes blink {
  50% {
    opacity: 0.0;
  }
}

@-webkit-keyframes blink {
  50% {
    opacity: 0.0;
  }
}

.blink {
  -webkit-animation: blink 1s step-start 0s infinite;
  -moz-animation: blink 1s step-start 0s infinite;
  animation: blink 1s step-start 0s infinite;
}

@mixin no-select($select) {
  -webkit-touch-callout: $select;
  -khtml-user-select: $select;
  -moz-user-select: $select;
  -ms-user-select: $select;
}

.section.no-padding-top-mobile {
  padding: 0 1.5rem 3rem;
}


@mixin trapezoid ($top-width, $bottom-width, $height) {
    $width: max($top-width, $bottom-width);
    $half-width-diff: abs($top-width - $bottom-width) / 2;

    $top-left-x: 0;
    $top-right-x: 0;
    $bottom-left-x: 0;
    $bottom-right-x: 0;

    @if ($top-width > $bottom-width) {
        $top-left-x: 0;
        $top-right-x: $top-width;
        $bottom-left-x: $half-width-diff;
        $bottom-right-x: $top-width - $half-width-diff;
    } @else {
        $top-left-x: $half-width-diff;
        $top-right-x: $bottom-width - $half-width-diff;
        $bottom-left-x: 0;
        $bottom-right-x: $bottom-width;
    }

    clip-path: polygon(0 0, $top-right-x 0, $bottom-right-x $height, $bottom-left-x $height);
    
    width: $width;
    height: $height;
}